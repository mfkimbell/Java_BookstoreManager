package Project_02;

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import Project_01.Administrator;
import Project_01.Doctor;
import Project_01.HospitalEmployee;
import Project_01.IT;
import Project_01.Janitor;
import Project_01.Nurse;
import Project_01.Receptionist;
import Project_01.Surgeon;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author mitchellkimbell
 */
public class GUI extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	private ArrayList<Book> books;
	private ArrayList<Customer> customers;
	private ArrayList<rentedBook> rentedBooks;
	
	/**
	 * Creates new form GUI
	 */
	public GUI(ArrayList<Book> books,ArrayList<Customer> customers, ArrayList<rentedBook> rentedBooks) {
		this.books=books;
		this.customers=customers;
		this.rentedBooks=rentedBooks;
		initComponents();
	}

	public ArrayList<Customer> getCustomers() {
		return customers;
	}

	public void setCustomers(ArrayList<Customer> customers) {
		this.customers = customers;
	}

	public void setBooks(ArrayList<Book> books) {
		this.books = books;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jTabbedPane1 = new javax.swing.JTabbedPane();
		jPanel1 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jScrollPane4 = new javax.swing.JScrollPane();
		jTextPane1 = new javax.swing.JTextPane();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton7 = new javax.swing.JButton();
		jPanel2 = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTable2 = new javax.swing.JTable();
		jScrollPane5 = new javax.swing.JScrollPane();
		jTextPane2 = new javax.swing.JTextPane();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jButton6 = new javax.swing.JButton();
		jButton8 = new javax.swing.JButton();
		jPanel3 = new javax.swing.JPanel();
		jScrollPane3 = new javax.swing.JScrollPane();
		jTable3 = new javax.swing.JTable();
		jTextField1 = new javax.swing.JTextField();
		jButton5 = new javax.swing.JButton();
		jTextField2 = new javax.swing.JTextField();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
		jLabel1.setText("Bookstore Manager");

		jTable1.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {
				{ "", null, null, null, null }, { "", null, null, null, null },
				{ "", null, null, null, null }, { "", null, null, null, null }, { "", null, null, null, null },
				{ "", null, null, null, null }, { "", null, null, null, null }, { "", null, null, null, null },
				{ "", null, null, null, null }, { "", null, null, null, null }, { "", null, null, null, null },
				{ null, null, null, null, null }, { null, null, null, null, null }, { null, null, null, null, null },
				{ null, null, null, null, null }, { null, null, null, null, null }, { null, null, null, null, null },
				{ null, null, null, null, null }, { null, null, null, null, null }, { null, null, null, null, null } },
				new String[] { "First Name", "Last Name", "Email", "Number", "Address" }) {
			Class[] types = new Class[] { java.lang.String.class, java.lang.String.class, java.lang.String.class,
					java.lang.Integer.class, java.lang.String.class };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		jScrollPane1.setViewportView(jTable1);

		jScrollPane4.setViewportView(jTextPane1);
		
		jTextPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextPane1KeyReleased(evt);
            }
        });
		
		jTextField1.getDocument().addDocumentListener((DocumentListener) new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent de) {
            	jTextPane1.setText(jTextField1.getText());
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
            	jTextPane1.setText(jTextField1.getText());
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
            //Plain text components don't fire these events.
            }
        });

		jButton1.setText("Search");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("Add Customer");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jButton7.setText("Display Customers");
		jButton7.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton7ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 200,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jButton7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton2)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jButton1).addComponent(jButton2).addComponent(jButton7)))
						.addGap(0, 18, Short.MAX_VALUE)));

		jTabbedPane1.addTab("Customers", jPanel1);

		jTable2.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null }, { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null }, { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null }, { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null }, { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null }, { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null }, { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null }, { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null }, { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null }, { null, null, null, null, null, null, null },
						{ null, null, null, null, null, null, null } },
				new String[] { "Title", "Author", "Page Number", "Publisher", "Year", "Copies", "Category" }) {
			Class[] types = new Class[] { java.lang.String.class, java.lang.String.class, java.lang.Integer.class,
					java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		jScrollPane2.setViewportView(jTable2);

		jScrollPane5.setViewportView(jTextPane2);

		jButton3.setText("Search");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jButton4.setText("Add Book");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});

		jButton6.setText("Rent Book");
		jButton6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton6ActionPerformed(evt);
			}
		});

		jButton8.setText("Display Books");
		jButton8.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton8ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane2)
				.addGroup(jPanel2Layout.createSequentialGroup()
						.addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 200,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton3)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
						.addComponent(jButton8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton4)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
						.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jButton3).addComponent(jButton4).addComponent(jButton6)
										.addComponent(jButton8)))
						.addGap(0, 18, Short.MAX_VALUE)));

		jTabbedPane1.addTab("Books", jPanel2);

		jTable3.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null },
						{ null, null, null }, { null, null, null }, { null, null, null }, { null, null, null },
						{ null, null, null }, { null, null, null }, { null, null, null }, { null, null, null },
						{ null, null, null }, { null, null, null }, { null, null, null }, { null, null, null },
						{ null, null, null }, { null, null, null }, { null, null, null }, { null, null, null } },
				new String[] { "Customer", "Title", "Author" }));
		jScrollPane3.setViewportView(jTable3);

		jButton5.setText("Search");
		jButton5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton5ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup()
						.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton5)
						.addGap(0, 0, Short.MAX_VALUE))
				.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup()
						.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton5))
						.addGap(0, 18, Short.MAX_VALUE)));

		jTabbedPane1.addTab("Rented Books", jPanel3);

		
		

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTabbedPane1)
						.addGroup(layout.createSequentialGroup()
								.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 265,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(100, 100, 100)
								.addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(0, 0, Short.MAX_VALUE)))
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel1))
								.addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		pack();
		
		jTextField2.setVisible(false);
	}// </editor-fold>
	
	private void jTextPane1KeyReleased(java.awt.event.KeyEvent evt) {                                       
        
    }     

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		
		
		DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
		ManagerTester test = new ManagerTester();
		System.out.println(jTextPane1.getText());
		
		test.createCustomerTable(customers,jTextPane1.getText());
		String[][]val = test.getCustomerTable();
		
		
		
		jTable1.setModel(new javax.swing.table.DefaultTableModel(val, new String[] {"First Name", "Last Name", "Address", "Phone Number"
				, "Email"}) {
			private static final long serialVersionUID = 1L;
			boolean[] canEdit = new boolean[] { false, false, false, false, false };
			
			public boolean isCellEditable (int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
		}
			
		});
		
		
	}
	
	

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		String customerFname = JOptionPane.showInputDialog("Customer first name:");
		String customerLname = JOptionPane.showInputDialog("Customer last name:");
		String customerEmail = JOptionPane.showInputDialog("Customer email:");
		String customernumber = JOptionPane.showInputDialog("Customer number:");
		String customerAddress = JOptionPane.showInputDialog("Customer address:");
	
		Customer newCustomer = new Customer(customerFname,customerLname,customerEmail,customernumber,customerAddress,new String[0]);
		customers.add(newCustomer);
		
		try {
			PrintWriter out = new PrintWriter("inputFile.txt");
			printBooks(out);
			printRentedBooks(out);
			printCustomers(out);
			

			
			

			out.close();
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();}
		
		







		
	
	}
	
private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		
		
		DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
		ManagerTester test = new ManagerTester();
		System.out.println(jTextPane2.getText());
	
		test.createBookTable(books,jTextPane2.getText());
		String[][]val = test.getBookTable();
		
		
		
		jTable2.setModel(new javax.swing.table.DefaultTableModel(val, new String[] { "Title", "Author", "Page Number", "Publisher", "Year", "Copies", "Category" }) {
			private static final long serialVersionUID = 1L;
			boolean[] canEdit = new boolean[] { false, false, false, false, false, false, false };
			
			public boolean isCellEditable (int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
		}
			
		});
		
		
	}

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
	
	String title = JOptionPane.showInputDialog("Book Title:");
	String author = JOptionPane.showInputDialog("Book author:");
	String pages = JOptionPane.showInputDialog("Book page count:");
	String publisher = JOptionPane.showInputDialog("Book Publisher:");
	String year = JOptionPane.showInputDialog("Book Year of Release:");
	String copies = JOptionPane.showInputDialog("Number of copies being added:");
	String category = JOptionPane.showInputDialog("Book Category:");
	
	Book newBook = new Book(title,author,Integer.valueOf(pages),publisher,Integer.valueOf(year),Integer.valueOf(copies),category);
	books.add(newBook);
	
	try {
		PrintWriter out = new PrintWriter("inputFile.txt");
		printBooks(out);
		printRentedBooks(out);
		printCustomers(out);
		

		
		

		out.close();
	} catch (FileNotFoundException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();}
	
	

	
	
	

	
	
}
	
	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
		ManagerTester test = new ManagerTester();
		String search = jTextPane1.getText();
		test.createRentedBookTable(customers,books,search);
		String[][]val = test.getRentedBookTable();
		
		
		
		jTable3.setModel(new javax.swing.table.DefaultTableModel(val, new String[] {"Customer","Title","Author" }) {
			private static final long serialVersionUID = 1L;
			boolean[] canEdit = new boolean[] { false, false, false, false, false };
			
			public boolean isCellEditable (int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
		}
			
		});
	}
	
@SuppressWarnings("unchecked")
private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
		
		String customerFname = JOptionPane.showInputDialog("Customer first name:");
		String customerLname = JOptionPane.showInputDialog("Customer last name:");
		String bookTitle = JOptionPane.showInputDialog("Book title:");
		Customer correctCustomer = new Customer(bookTitle, bookTitle, bookTitle, bookTitle, bookTitle, new String[] {});
		boolean flag = false;
		
		for (Customer customer:customers) {
			
			

			if (customerFname.equals(customer.getFname())) {
				
				flag = true;
				correctCustomer = customer;
			}
			else if (customerLname.equals(customer.getLname())) {
				flag = true;
				correctCustomer = customer;

			}
		}
		
		if (flag==false) {
			String popup2 = JOptionPane.showInputDialog("Customer does not exist.",null);
			return;
		}
		System.out.println("customer is " + customerFname);

		
		for (Book book:books) {
			
			if (bookTitle.equals(book.getTitle())) {
				if (!(book.getCopies()==0)) {
				
				System.out.printf("book %s had %d copies in library\n",bookTitle,book.getCopies());
				book.setCopies(book.getCopies()-1);
				String[] rentals = correctCustomer.getRentals();
				int size = rentals.length;
				String[] newRentals = new String[size+1];
				
//				List rentalsArr = Arrays.asList(rentals);
//				rentalsArr.add(bookTitle);
//				String[] backToArray = (String[]) rentalsArr.toArray();
				int counter = 0;
				for (String rental:correctCustomer.getRentals()) {
					newRentals[counter]=rental;
					counter++;
				}
				newRentals[(size)]=bookTitle;
				correctCustomer.setRentals(newRentals);
				
				
				System.out.printf("book %s now has %d copies in library\n",bookTitle,book.getCopies());
				System.out.printf("New Books currently rented by %s %s:\n",correctCustomer.getFname(),correctCustomer.getLname());
				
				for (String rental:correctCustomer.getRentals()) {
					System.out.println(rental);
				}
				return;
				
				} else {
					
					String popup2 = JOptionPane.showInputDialog("No copies available for rent.",null);
					return;
					

				}
		} 
			
		} 
		String popup3 = JOptionPane.showInputDialog("This book is not in the library.",null);
		return;

		
		
		
			
			
		}
		
		
		
	
	
	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
		ManagerTester test = new ManagerTester();
		test.createCustomerTable(customers);
		String[][]val = test.getCustomerTable();
		
		
		
		jTable1.setModel(new javax.swing.table.DefaultTableModel(val, new String[] {"First Name", "Last Name", "Address", "Phone Number"
				, "Email"}) {
			private static final long serialVersionUID = 1L;
			boolean[] canEdit = new boolean[] { false, false, false, false, false };
			
			public boolean isCellEditable (int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
		}
			
		});
	}
	private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
		ManagerTester test = new ManagerTester();
		test.createBookTable(books);
		String[][]val = test.getBookTable();
		
		
		
		jTable2.setModel(new javax.swing.table.DefaultTableModel(val, new String[] { "Title", "Author", "Page Number", "Publisher", "Year", "Copies", "Category" }) {
			private static final long serialVersionUID = 1L;
			boolean[] canEdit = new boolean[] { false, false, false, false, false };
			
			public boolean isCellEditable (int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
		}
			
		});
	}

	

	public ArrayList<rentedBook> getRentedBooks() {
		return rentedBooks;
	}

	public void setRentedBooks(ArrayList<rentedBook> rentedBooks) {
		this.rentedBooks = rentedBooks;
	}
	
//	try {
//		PrintWriter out = new PrintWriter("output.txt");
//		printBooks();
//		printRentedBooks();
//		printCustomer();

	
	public void printBooks(PrintWriter out, Book newBook) {
		
	}
	public void printBooks(PrintWriter out) {
		out.print("Books:\n");
		for (Book book:books) {
			out.print(book.getTitle()+","+book.getAuthor()+","+book.getPages()+","+book.getPublisher()+","+book.getYear()+","+book.getCopies()+","+book.getCategory()+"\n");
			
		}
		
	}
	
	public void printRentedBooks(PrintWriter out, rentedBook newRental) {
		
		
	}
	
	public void printRentedBooks(PrintWriter out) {
		out.print("Rented Books:\n");
		for (rentedBook book:rentedBooks) {
			out.print(book.getTitle()+","+book.getAuthor()+","+book.getPages()+","+book.getPublisher()+","+book.getYear()+","+book.getRenterLN()+","+book.getCategory()+"\n");
			
		}
		
	}
		
	public void printCustomers(PrintWriter out, Customer newCustomer) {
		
	}
	
	public void printCustomers(PrintWriter out) {
		out.print("Customers:\n");
		for (Customer customer:customers) {
			out.print(customer.getFname()+","+customer.getLname()+","+customer.getEmail()+","+customer.getNumber()+","+customer.getAddress()+",");
			
			customer.getRentals();
			int size = customer.getRentals().length;
			int counter = 0;
			if (size==0) {
				out.print("No Rented Books");
			}
			for (String book:customer.getRentals()) {
				out.print(book);
				if (!(counter==(size-1))) {
					out.print(":");
					
				}
				counter++;
				
			
				
				
			}
			out.print("\n");
		}
	}
		
	



	/**
	 * @param args the command line arguments
	 */
	



	// Variables declaration - do not modify
	javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JButton jButton8;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JScrollPane jScrollPane4;
	private javax.swing.JScrollPane jScrollPane5;
	private javax.swing.JTabbedPane jTabbedPane1;
	public static javax.swing.JTable jTable1;
	private javax.swing.JTable jTable2;
	private javax.swing.JTable jTable3;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField jTextField2;
	private javax.swing.JTextPane jTextPane1;
	private javax.swing.JTextPane jTextPane2;
	// End of variables declaration
}